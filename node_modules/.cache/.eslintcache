[{"/home/manoel/Codigos/flimed/src/index.tsx":"1","/home/manoel/Codigos/flimed/src/App.tsx":"2","/home/manoel/Codigos/flimed/src/styles/global.ts":"3","/home/manoel/Codigos/flimed/src/styles/theme.ts":"4","/home/manoel/Codigos/flimed/src/router/index.tsx":"5","/home/manoel/Codigos/flimed/src/pages/Note/index.tsx":"6","/home/manoel/Codigos/flimed/src/pages/Home/index.tsx":"7","/home/manoel/Codigos/flimed/src/pages/Login/index.tsx":"8","/home/manoel/Codigos/flimed/src/pages/Note/styles.ts":"9","/home/manoel/Codigos/flimed/src/pages/Home/styles.ts":"10","/home/manoel/Codigos/flimed/src/pages/Login/styles.ts":"11","/home/manoel/Codigos/flimed/src/components/Loading/index.tsx":"12","/home/manoel/Codigos/flimed/src/components/Loading/styles.ts":"13","/home/manoel/Codigos/flimed/src/hooks/useAuth.tsx":"14","/home/manoel/Codigos/flimed/src/services/api.ts":"15","/home/manoel/Codigos/flimed/src/hooks/useNotes.tsx":"16","/home/manoel/Codigos/flimed/src/components/Modal/index.tsx":"17","/home/manoel/Codigos/flimed/src/components/Modal/styles.ts":"18","/home/manoel/Codigos/flimed/src/components/NoteCard/index.tsx":"19","/home/manoel/Codigos/flimed/src/components/NoteCard/styles.ts":"20"},{"size":247,"mtime":1649125079414,"results":"21","hashOfConfig":"22"},{"size":640,"mtime":1649101243109,"results":"23","hashOfConfig":"22"},{"size":503,"mtime":1649097388142,"results":"24","hashOfConfig":"22"},{"size":250,"mtime":1649126095923,"results":"25","hashOfConfig":"22"},{"size":441,"mtime":1649102656182,"results":"26","hashOfConfig":"22"},{"size":1330,"mtime":1649174317422,"results":"27","hashOfConfig":"22"},{"size":2013,"mtime":1649180446851,"results":"28","hashOfConfig":"22"},{"size":2334,"mtime":1649254648925,"results":"29","hashOfConfig":"22"},{"size":244,"mtime":1649093076803,"results":"30","hashOfConfig":"22"},{"size":959,"mtime":1649166563986,"results":"31","hashOfConfig":"22"},{"size":1583,"mtime":1649095752369,"results":"32","hashOfConfig":"22"},{"size":368,"mtime":1649094762873,"results":"33","hashOfConfig":"22"},{"size":158,"mtime":1649094750369,"results":"34","hashOfConfig":"22"},{"size":1408,"mtime":1649174221465,"results":"35","hashOfConfig":"22"},{"size":501,"mtime":1649184434098,"results":"36","hashOfConfig":"22"},{"size":1939,"mtime":1649180219844,"results":"37","hashOfConfig":"22"},{"size":2489,"mtime":1649180332490,"results":"38","hashOfConfig":"22"},{"size":2137,"mtime":1649160667753,"results":"39","hashOfConfig":"22"},{"size":1041,"mtime":1649180346550,"results":"40","hashOfConfig":"22"},{"size":1635,"mtime":1649166637859,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"b48zrq",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"45"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"45"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/home/manoel/Codigos/flimed/src/index.tsx",[],[],["109","110"],"/home/manoel/Codigos/flimed/src/App.tsx",[],[],"/home/manoel/Codigos/flimed/src/styles/global.ts",[],[],"/home/manoel/Codigos/flimed/src/styles/theme.ts",[],[],"/home/manoel/Codigos/flimed/src/router/index.tsx",["111"],[],"import { Route, Routes } from \"react-router-dom\";\nimport Home from \"../pages/Home\";\nimport Note from \"../pages/Note\";\nimport Login from '../pages/Login'\nimport { useAuth } from \"../hooks/useAuth\";\n\nconst Rotas = () => {\n  return (\n    <Routes >\n      <Route path=\"/\" element={<Login />} />\n      < Route path=\"/home\" element={< Home />} />\n      < Route path=\"/home/:title\" element={< Note />} />\n    </Routes>\n  );\n};\n\nexport default Rotas;","/home/manoel/Codigos/flimed/src/pages/Note/index.tsx",["112","113","114","115","116","117","118"],[],"import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n    Container,\n    Content,\n} from './styles';\nimport { useTheme } from 'styled-components';\nimport Loading from '../../components/Loading';\nimport { useAuth } from '../../hooks/useAuth';\n\nconst Note: React.FC = () => {\n    const { user } = useAuth();\n    const { id } = useParams() as unknown as NoteParams;\n    const [note, setNote] = useState<Note>({} as Note);\n    const [loading, setLoading] = useState(false);\n    const theme = useTheme();\n    const navigate = useNavigate();\n    async function fetchNote(title: string) {\n        try {\n            setLoading(true);\n            // const result = await searchMovie(id);\n            // setMovie(result);\n        } catch (err) {\n            return console.log(err);\n        } finally {\n            setLoading(false);\n        };\n    }\n    function handleGoBack() {\n        navigate(-1)\n    }\n    useEffect(() => {\n        if (user === null) {\n            return navigate(\"/\");\n        };\n    }, [user])\n    return (\n        <Container>\n            {loading ?\n                <Loading />\n                :\n                <Content>\n                    <h1>ola</h1>\n                </Content>\n            }\n        </Container>\n    );\n};\n\nexport default Note;\n","/home/manoel/Codigos/flimed/src/pages/Home/index.tsx",["119"],[],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Loading from '../../components/Loading';\nimport Modal from '../../components/Modal';\nimport NoteCard from '../../components/NoteCard';\nimport { useAuth } from '../../hooks/useAuth';\nimport { useNotes } from '../../hooks/useNotes';\nimport {\n    Container,\n    Title,\n    Content,\n    CreateButton,\n    ContentContainer\n} from './styles';\n\n\n\nconst Home: React.FC = () => {\n    const { user } = useAuth();\n    const { fetchNotes, isModalVisible, handleOpenModal, notes } = useNotes();\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(false);\n    const handleSelectedNote = (note: Note) => {\n        navigate(`/${String(note.id)}`);\n    };\n    const getNotes = async () => {\n        setLoading(true);\n        try {\n            await fetchNotes();\n        } catch (error: any) {\n            console.log(error.message as string);\n        }\n        finally {\n            setLoading(false);\n        }\n    }\n    useEffect(() => {\n        if (user === null) {\n            return navigate(\"/\");\n        };\n        getNotes();\n    }, [user])\n    return (\n        <Container>\n            <Title>TODO APP</Title>\n            <CreateButton onClick={() => handleOpenModal()}>Create new task </CreateButton>\n            {isModalVisible ? <Modal />\n                :\n                <ContentContainer>\n                    {loading ? <Loading />\n                        :\n                        <Content>\n                            {notes?.map((note: Note, key) => (\n                                <NoteCard\n                                    data={note}\n                                    key={key}\n                                    onClick={() => handleSelectedNote(note)}\n                                />\n                            ))}\n                        </Content>\n                    }\n                </ContentContainer>}\n        </Container>\n    );\n};\n\nexport default Home;","/home/manoel/Codigos/flimed/src/pages/Login/index.tsx",["120"],[],"/home/manoel/Codigos/flimed/src/pages/Note/styles.ts",[],[],"/home/manoel/Codigos/flimed/src/pages/Home/styles.ts",[],[],"/home/manoel/Codigos/flimed/src/pages/Login/styles.ts",[],[],"/home/manoel/Codigos/flimed/src/components/Loading/index.tsx",[],[],"/home/manoel/Codigos/flimed/src/components/Loading/styles.ts",[],[],"/home/manoel/Codigos/flimed/src/hooks/useAuth.tsx",["121"],[],"import React, { ReactNode, useState, useEffect, useContext } from \"react\";\nimport * as api from \"../services/api\";\n\ninterface AuthProviderProps {\n  children: ReactNode;\n};\n\ninterface AuthContextData {\n  user: User | null;\n  fetchUser: (email: string, password: string) => Promise<void>;\n}\n\nexport const AuthContext = React.createContext<AuthContextData>({} as AuthContextData);\n\nconst AuthProvider = ({ children }: AuthProviderProps) => {\n  const [user, setUser] = useState<User | null>(JSON.parse(localStorage.getItem('user')!) ?? null);\n\n  const fetchUser = async (email: string, password: string) => {\n    const currentUser = await api.login(email, password);\n    if (currentUser) {\n      localStorage.setItem('user', JSON.stringify(currentUser));\n      setUser(currentUser.user as User);\n    };\n  };\n  const loadUser = async () => {\n    const userCollection = await localStorage.getItem('user');\n    if (userCollection) {\n      const parsedUser = await JSON.parse(userCollection) as User;\n      fetchUser(parsedUser.email, parsedUser.password)\n    };\n  };\n  useEffect(() => {\n    if (user === null) {\n      loadUser();\n    }\n    console.log(user);\n  }, [user]);\n  return (\n    <AuthContext.Provider value={{ user, fetchUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuth = () => {\n  const context = useContext(AuthContext);\n  return context;\n};\n\nexport { AuthProvider, useAuth };","/home/manoel/Codigos/flimed/src/services/api.ts",[],[],"/home/manoel/Codigos/flimed/src/hooks/useNotes.tsx",[],[],"/home/manoel/Codigos/flimed/src/components/Modal/index.tsx",["122","123"],[],"import { FormEvent, useEffect, useState } from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { useNotes } from '../../hooks/useNotes';\nimport theme from '../../styles/theme';\nimport Loading from '../Loading';\n\nimport {\n    Container,\n    Header,\n    Title,\n    Button,\n    ContentTextArea,\n    DescriptionInput,\n    Form,\n    FormButton,\n    TitleInput\n} from './styles';\ninterface ModalProps {\n    data?: Note;\n}\nconst Modal = ({ data }: ModalProps) => {\n    const { handleCloseModal, notes } = useNotes();\n    const [loading, setLoading] = useState(false);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [content, setContent] = useState('');\n    async function onSubmit(event: FormEvent) {\n        event.preventDefault();\n            notes.push({\n                id: String(new Date()),\n                title,\n                description,\n                content,\n            });\n            localStorage.setItem('notes', JSON.stringify(notes));\n            handleCloseModal();\n    };\n    useEffect(() => {\n        console.log(data?.id)\n    }, [])\n    return (\n        <Container>\n            <Header>\n                <div />\n                <Title>{data?.id ? \"Edit Task\" : \"Add Task\"}</Title>\n                <Button onClick={handleCloseModal} >\n                    <AiOutlineClose style={{ color: theme.white_details }} />\n                </Button>\n            </Header>\n            <Form>\n                <TitleInput\n                    type='text'\n                    placeholder=\"Title\"\n                    value={title}\n                    onChange={(event) => setTitle(event.target.value)}\n                />\n                <DescriptionInput\n                    type='text'\n                    placeholder=\"Description\"\n                    value={description}\n                    onChange={(event) => setDescription(event.target.value)}\n                />\n                <ContentTextArea\n                    placeholder=\"Content\"\n                    value={content}\n                    onChange={(event) => setContent(event.target.value)}\n                />\n                <FormButton type=\"submit\" onClick={onSubmit}>\n                    {loading\n                        ?\n                        <Loading />\n                        :\n                        \"Create\"\n                    }\n                </FormButton>\n            </Form>\n        </Container>\n    );\n};\n\nexport default Modal;","/home/manoel/Codigos/flimed/src/components/Modal/styles.ts",[],[],"/home/manoel/Codigos/flimed/src/components/NoteCard/index.tsx",["124"],[],"import React, { useEffect } from 'react';\nimport { useNotes } from '../../hooks/useNotes';\nimport Modal from '../Modal';\nimport {\n  Container,\n  Title,\n  Details,\n  Description,\n  Content,\n  ButtonsContainer,\n  DeleteButton,\n  UpdateButton,\n} from './styles';\n\ninterface NoteCardProps {\n  data: Note;\n  onClick: () => void;\n};\n\nconst NoteCard = ({ data, onClick }: NoteCardProps) => {\n  const { deleteNote, updateNote, isModalVisible } = useNotes();\n  return (\n    <Container>\n      {isModalVisible ? <Modal data={data}/>\n        :\n     <>\n     <Details onClick={onClick}>\n     <Title>{data.title}</Title>\n     <Description> {data.description}</Description>\n     <Content\n     defaultValue={data.content}\n       disabled\n     >\n  \n     </Content>\n   </Details>\n   <ButtonsContainer>\n     <DeleteButton\n       onClick={() => deleteNote(data)}\n     >Delete</DeleteButton>\n     <UpdateButton\n       onClick={() => updateNote(data)}\n     >Update</UpdateButton>\n   </ButtonsContainer></>\n      }\n    </Container>\n  );\n};\n\nexport default NoteCard;","/home/manoel/Codigos/flimed/src/components/NoteCard/styles.ts",[],[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":5,"column":10,"nodeType":"131","messageId":"132","endLine":5,"endColumn":17},{"ruleId":"129","severity":1,"message":"133","line":13,"column":13,"nodeType":"131","messageId":"132","endLine":13,"endColumn":15},{"ruleId":"129","severity":1,"message":"134","line":14,"column":12,"nodeType":"131","messageId":"132","endLine":14,"endColumn":16},{"ruleId":"129","severity":1,"message":"135","line":14,"column":18,"nodeType":"131","messageId":"132","endLine":14,"endColumn":25},{"ruleId":"129","severity":1,"message":"136","line":16,"column":11,"nodeType":"131","messageId":"132","endLine":16,"endColumn":16},{"ruleId":"129","severity":1,"message":"137","line":18,"column":20,"nodeType":"131","messageId":"132","endLine":18,"endColumn":29},{"ruleId":"129","severity":1,"message":"138","line":29,"column":14,"nodeType":"131","messageId":"132","endLine":29,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":36,"column":8,"nodeType":"141","endLine":36,"endColumn":14,"suggestions":"142"},{"ruleId":"139","severity":1,"message":"143","line":42,"column":8,"nodeType":"141","endLine":42,"endColumn":14,"suggestions":"144"},{"ruleId":"139","severity":1,"message":"145","line":45,"column":8,"nodeType":"141","endLine":45,"endColumn":10,"suggestions":"146"},{"ruleId":"139","severity":1,"message":"147","line":37,"column":6,"nodeType":"141","endLine":37,"endColumn":12,"suggestions":"148"},{"ruleId":"129","severity":1,"message":"149","line":23,"column":21,"nodeType":"131","messageId":"132","endLine":23,"endColumn":31},{"ruleId":"139","severity":1,"message":"150","line":40,"column":8,"nodeType":"141","endLine":40,"endColumn":10,"suggestions":"151"},{"ruleId":"129","severity":1,"message":"152","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"@typescript-eslint/no-unused-vars","'useAuth' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'note' is assigned a value but never used.","'setNote' is assigned a value but never used.","'theme' is assigned a value but never used.","'fetchNote' is defined but never used.","'handleGoBack' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook useEffect has missing dependencies: 'getNotes' and 'navigate'. Either include them or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'navigate' and 'user'. Either include them or remove the dependency array.",["157"],"React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["158"],"'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'data?.id'. Either include it or remove the dependency array.",["159"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"160","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [navigate, user]",{"range":"169","text":"170"},"Update the dependencies array to be: [getNotes, navigate, user]",{"range":"171","text":"172"},{"range":"173","text":"170"},"Update the dependencies array to be: [loadUser, user]",{"range":"174","text":"175"},"Update the dependencies array to be: [data?.id]",{"range":"176","text":"177"},[1067,1073],"[navigate, user]",[1159,1165],"[getNotes, navigate, user]",[1260,1262],[1157,1163],"[loadUser, user]",[1128,1130],"[data?.id]"]