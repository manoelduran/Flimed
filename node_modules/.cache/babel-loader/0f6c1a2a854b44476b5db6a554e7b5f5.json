{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Codigos/flimed/src/pages/Note/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Content } from './styles';\nimport { useTheme } from 'styled-components';\nimport Loading from '../../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = () => {\n  _s();\n\n  const {\n    title\n  } = useParams();\n  const [note, setNote] = useState({});\n  const [loading, setLoading] = useState(false);\n  const theme = useTheme();\n  const navigate = useNavigate();\n\n  async function fetchNote(title) {\n    try {\n      setLoading(true); // const result = await searchMovie(id);\n      // setMovie(result);\n    } catch (err) {\n      return console.log(err);\n    } finally {\n      setLoading(false);\n    }\n\n    ;\n  }\n\n  function handleGoBack() {\n    navigate(-1);\n  }\n\n  useEffect(() => {// fetchNote(id);\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Content, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Note, \"5DpmjJHNBZ/d4gQxTv5+uDbMQxg=\", false, function () {\n  return [useParams, useTheme, useNavigate];\n});\n\n_c = Note;\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/home/manoel/Codigos/flimed/src/pages/Note/index.tsx"],"names":["React","useEffect","useState","useNavigate","useParams","Container","Content","useTheme","Loading","Note","title","note","setNote","loading","setLoading","theme","navigate","fetchNote","err","console","log","handleGoBack"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SACIC,SADJ,EAEIC,OAFJ,QAGO,UAHP;AAIA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAYN,SAAS,EAA3B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAO,EAAP,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMa,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAMS,QAAQ,GAAGb,WAAW,EAA5B;;AACA,iBAAec,SAAf,CAAyBP,KAAzB,EAAwC;AACpC,QAAI;AACAI,MAAAA,UAAU,CAAC,IAAD,CAAV,CADA,CAEA;AACA;AACH,KAJD,CAIE,OAAOI,GAAP,EAAY;AACV,aAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACH,KAND,SAMU;AACNJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAAA;AACJ;;AACD,WAASO,YAAT,GAAwB;AACpBL,IAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACH;;AACDf,EAAAA,SAAS,CAAC,MAAM,CACZ;AAEH,GAHQ,EAGN,CAACS,KAAD,CAHM,CAAT;AAIA,sBACI,QAAC,SAAD;AAAA,cACKG,OAAO,gBACJ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ,QAAC,OAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnCD;;GAAMJ,I;UACgBL,S,EAGJG,Q,EACGJ,W;;;KALfM,I;AAqCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n    Container,\n    Content,\n} from './styles';\nimport { useTheme } from 'styled-components';\nimport Loading from '../../components/Loading';\n\nconst Note: React.FC = () => {\n    const { title } = useParams() as unknown as NoteParams;\n    const [note, setNote] = useState<Note>({} as Note);\n    const [loading, setLoading] = useState(false);\n    const theme = useTheme();\n    const navigate = useNavigate();\n    async function fetchNote(title: string) {\n        try {\n            setLoading(true);\n            // const result = await searchMovie(id);\n            // setMovie(result);\n        } catch (err) {\n            return console.log(err);\n        } finally {\n            setLoading(false);\n        };\n    }\n    function handleGoBack() {\n        navigate(-1)\n    }\n    useEffect(() => {\n        // fetchNote(id);\n\n    }, [title])\n    return (\n        <Container>\n            {loading ?\n                <Loading />\n                :\n                <Content>\n                    <h1>ola</h1>\n                </Content>\n            }\n        </Container>\n    );\n};\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}