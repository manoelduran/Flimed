{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Codigos/flimed/src/pages/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import { NoteCard } from '../../components/MovieCard';\n\nimport { useNavigate } from 'react-router-dom'; // import { Loading } from '../../components/Loading';\n\nimport { useTheme } from 'styled-components';\nimport { Container, ContentContainer } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const theme = useTheme();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  async function fetchNotes() {\n    try {\n      setLoading(true); // const response = await api.searchMovies(search);\n      // setNotes(response);\n    } catch (err) {\n      return console.log(err);\n    } finally {\n      setLoading(false);\n    }\n\n    ;\n  }\n\n  ;\n\n  function handleSelectedNote(note) {\n    navigate(`/${String(note.title)}`);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"GW7TdOTb//IxiXHdJTWTFnJ7brA=\", false, function () {\n  return [useTheme, useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/manoel/Codigos/flimed/src/pages/Home/index.tsx"],"names":["React","useState","useNavigate","useTheme","Container","ContentContainer","Home","theme","notes","setNotes","loading","setLoading","navigate","fetchNotes","err","console","log","handleSelectedNote","note","String","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CACA;;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,SACIC,SADJ,EAGIC,gBAHJ,QAIO,UAJP;;;AAOA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGJ,QAAQ,EAAtB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMW,QAAQ,GAAGV,WAAW,EAA5B;;AACA,iBAAeW,UAAf,GAA4B;AACxB,QAAI;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV,CADA,CAEA;AACA;AACH,KAJD,CAIE,OAAOG,GAAP,EAAY;AACV,aAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACH,KAND,SAMU;AACNH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AAAA;AACJ;;AAAA;;AACD,WAASM,kBAAT,CAA4BC,IAA5B,EAAwC;AACpCN,IAAAA,QAAQ,CAAE,IAAGO,MAAM,CAACD,IAAI,CAACE,KAAN,CAAa,EAAxB,CAAR;AACH;;AAAA;AACD,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,gBAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CArCD;;GAAMd,I;UACYH,Q,EAGGD,W;;;KAJfI,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\n// import { NoteCard } from '../../components/MovieCard';\nimport { useNavigate } from 'react-router-dom';\n// import { Loading } from '../../components/Loading';\nimport { useTheme } from 'styled-components';\nimport * as api from '../../services/api';\nimport {\n    Container,\n    Content,\n    ContentContainer\n} from './styles';\n\n\nconst Home: React.FC = () => {\n    const theme = useTheme();\n    const [notes, setNotes] = useState<Note[]>([] as Note[]);\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n    async function fetchNotes() {\n        try {\n            setLoading(true);\n            // const response = await api.searchMovies(search);\n            // setNotes(response);\n        } catch (err) {\n            return console.log(err);\n        } finally {\n            setLoading(false);\n        };\n    };\n    function handleSelectedNote(note: Note) {\n        navigate(`/${String(note.title)}`);\n    };\n    return (\n        <Container>\n            <ContentContainer>\n                <h1>ola</h1>\n                {/* {loading ? <Loading /> :\n                    <Content>\n                        {notes.map((note: Note, key) => (\n                            <NoteCard\n                                data={note}\n                                key={key}\n                                onClick={() => handleSelectedNote(note)}\n                            />\n                        ))}\n                    </Content>\n                } */}\n            </ContentContainer>\n        </Container>\n    );\n};\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}